27.一个台阶总共有 n 级,如果一次可以跳 1 级,也可以跳 2 级。
求总共有多少总跳法,并分析算法的时间复杂度。
这道题最近经常出现,包括 MicroStrategy 等比较重视算法的公司
都曾先后选用过个这道题作为面试题或者笔试题。

动态规划思想,时间复杂度，转移O(1)，总复杂度O(n)
其实就是fibonacci数列，只不过f[0] = 1,这里的第n项在fibonacci里是第n+1项
int getWays(int n)
{
	int *f = new int [n+1];
	f[0] = f[1] = 1;
	for(int i=2; i<=n; i++)
	{
		f[i] = 0;
		f[i] += f[i-1];
		f[i] += f[i-2];
	}
	return f[n];
}

