#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define base 'a'
#define SIZE 1024

struct node
{
    char value;
    node *son[26];
    bool isWord;
    int sum;
}*root;

void init()
{
    root = (node *)malloc(sizeof(node));
    for(int i=0; i<26; i++)
        root->son[i] = NULL;
    root->isWord = false;
    root->sum = 0;
}

void insert(char *str)
{
    int len = (int)strlen(str);
    node *ptr = root;
    for(int i=0; i<len; i++)
    {
        ptr->sum ++;
        if(ptr->son[str[i]-base] == NULL)
        {
            node *tem = (node *)malloc(sizeof(node));
            for(int k=0; k<26; k++)
                tem->son[k] = NULL;
            tem->isWord = false;
            tem->sum = 0;
            ptr->son[str[i]-base] = tem;
        }
        ptr = ptr->son[str[i]-base];
    }
    ptr->isWord = true;
    ptr->sum ++;
}

void search(char *str,int &check,int &total)
{
    int len = (int)strlen(str);
    node *ptr = root;
    for(int i=0; i<len && ptr != NULL; i++)
    {
        if(ptr->son[str[i]-base] == NULL)
        {
            check = 0;
            total = ptr->sum;
            return ;
        }
        ptr = ptr->son[str[i]-base];
    }
    check = ptr->isWord?1:0;
    total = ptr->sum;
}

void Free(node *rt)
{
    if(rt == NULL)return;
    for(int i=0; i<26; i++)
        if(rt->son[i] != NULL)
            Free(rt->son[i]);
    free(rt);
}

int main()
{
    int n;
    char str[100];
    while(cin >> n)
    {
        init();
        for(int i=1; i<=n; i++)
        {
            cin >> str;
            insert(str);
        }
        int question;
        cin >> question;
        while(question--)
        {
            int check = -1, total = -1;
            cin >> str;
            search(str,check,total);
            if(check == 0)
                printf("%s is not a word, the number is %d\n",str,total);
            else
                printf("the number of %s is %d\n",str,total);
        }
    }
    return 0;
}


